{
  "name": "nest-boilerplate",
  "version": "0.0.1",
  "description": "A new way to setup nestjs boilerplate using GRPC + Restfull API",
  "author": "Krisna Satria",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "rimraf dist && tsc -p tsconfig.build.json && tsc-alias -p tsconfig.json && npm run copy:asset",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "tsc-watch -p tsconfig.build.json --onCompilationComplete \"tsc-alias -p tsconfig.build.json\" --onSuccess \"node dist/api-gateway/main.js\"",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "copy:asset-w": "cpx -w 'assets/**' 'dist/assets'",
    "copy:asset": "cpx 'assets/**' 'dist/assets'",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migration:generate": "ts-node node_modules/typeorm/cli.js migration:generate -d ormconfig",
    "migration:revert": "ts-node node_modules/typeorm/cli.js migration:revert -d ormconfig",
    "migration:create": "ts-node node_modules/typeorm/cli.js migration:create",
    "migration:run": "ts-node ./node_modules/typeorm/cli.js migration:run -d ormconfig",
    "schema:drop": "ts-node node_modules/typeorm/cli.js schema:drop -d ormconfig",
    "lint": "eslint '{src,apps,libs,test}/**/*.ts'",
    "lint:fix": "eslint '{src,apps,libs,test}/**/*.ts' --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:dev": "jest --colors --verbose --coverage --maxWorkers=50%",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docs:proto-gen": "./scripts/generate-proto-docs.sh",
    "internal:install": "./scripts/install.sh",
    "internal:lint": "./scripts/lint.sh",
    "internal:build": "./scripts/build.sh",
    "docker:build": "docker-compose build",
    "docker:start": "docker-compose up",
    "docker:teardown": "docker-compose down -v"
  },
  "dependencies": {
    "@medibloc/nestjs-request-context": "^1.0.1",
    "@nestjs/axios": "^3.0.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/cqrs": "^10.0.1",
    "@nestjs/graphql": "^12.0.7",
    "@nestjs/microservices": "^10.0.3",
    "@nestjs/platform-express": "^10.0.3",
    "@nestjs/swagger": "^7.0.12",
    "@nestjs/terminus": "^10.0.1",
    "@nestjs/typeorm": "^10.0.0",
    "@prisma/client": "^4.16.1",
    "argon2": "^0.30.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cpx2": "^4.2.3",
    "date-fns-tz": "^2.0.0",
    "dotenv": "^16.3.1",
    "express-rate-limit": "^6.7.0",
    "helmet": "^7.0.0",
    "lodash": "^4.17.21",
    "nestjs-i18n": "^10.2.6",
    "nestjs-paginate": "^8.1.4",
    "nestjs-pino": "^3.3.0",
    "newrelic": "^10.3.2",
    "pg": "^8.11.1",
    "pino-http": "^8.3.3",
    "pino-pretty": "^10.0.0",
    "redis": "^4.6.7",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "rxjs": "^7.8.1",
    "ts-morph": "^19.0.0",
    "tsc-watch": "^6.0.4",
    "typeorm": "^0.3.17",
    "winston": "^3.9.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/newrelic": "^9.14.0",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.59.11",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "prettier": "^2.8.8",
    "prisma": "^4.16.1",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
